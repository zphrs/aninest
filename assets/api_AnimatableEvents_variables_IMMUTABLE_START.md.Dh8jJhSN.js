import{_ as t,o as e,c as s,ag as i}from"./chunks/framework.4dSU8SgQ.js";const T=JSON.parse('{"title":"IMMUTABLE_START","description":"","frontmatter":{},"headers":[],"relativePath":"api/AnimatableEvents/variables/IMMUTABLE_START.md","filePath":"api/AnimatableEvents/variables/IMMUTABLE_START.md"}'),n={name:"api/AnimatableEvents/variables/IMMUTABLE_START.md"};function o(l,a,r,h,p,c){return e(),s("div",null,a[0]||(a[0]=[i('<p><a href="./../../">aninest-root</a> / <a href="./../">AnimatableEvents</a> / IMMUTABLE_START</p><h1 id="immutable-start" tabindex="-1">IMMUTABLE_START <a class="header-anchor" href="#immutable-start" aria-label="Permalink to &quot;IMMUTABLE\\_START&quot;">â€‹</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">const</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;"> IMMUTABLE_START</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">:</span><span style="--shiki-light:#846905;--shiki-dark:#FFD140;"> &quot;immutableStart&quot;</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> =</span><span style="--shiki-light:#846905;--shiki-dark:#FFD140;"> &quot;immutableStart&quot;</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/zphrs/aninest/blob/a363ca71fdc4d7663cf000c3eff7b2cf0db5b46a/core/src/Animate/AnimatableEvents.ts#L33" target="_blank" rel="noreferrer">Animate/AnimatableEvents.ts:33</a></p><p>Same as <a href="./START.html">START</a> but by convention no <a href="./../../Animatable/functions/modifyTo.html">modifyTo</a> calls should be made in any listeners attached to this event. This is useful for extensions which need to know when the animation is starting such as the proxy extension but which don&#39;t need to trigger any modifications to any animation states.</p>',5)]))}const m=t(n,[["render",o]]);export{T as __pageData,m as default};
