import{_ as i,o as t,c as e,ag as n}from"./chunks/framework.4dSU8SgQ.js";const k=JSON.parse('{"title":"Mount()<Animating>","description":"","frontmatter":{},"headers":[],"relativePath":"api/Extension/type-aliases/Mount.md","filePath":"api/Extension/type-aliases/Mount.md"}'),s={name:"api/Extension/type-aliases/Mount.md"};function o(r,a,l,h,p,d){return t(),e("div",null,a[0]||(a[0]=[n('<p><a href="./../../">aninest-root</a> / <a href="./../">Extension</a> / Mount</p><h1 id="mount-animating" tabindex="-1">Mount()&lt;Animating&gt; <a class="header-anchor" href="#mount-animating" aria-label="Permalink to &quot;Mount()\\&lt;Animating\\&gt;&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">type</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> Mount</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">Animating</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt; </span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">=</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;"> (</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">anim</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">options</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">?</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">) </span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">=&gt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> unmount</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/zphrs/aninest/blob/310077e630d6ee37eacb9031d0d4959aae280204/core/src/Animate/Extension.ts#L17" target="_blank" rel="noreferrer">Animate/Extension.ts:17</a></p><p>A function that mounts an extension to the animation.</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><h3 id="animating" tabindex="-1">Animating <a class="header-anchor" href="#animating" aria-label="Permalink to &quot;Animating&quot;">​</a></h3><p><code>Animating</code> <em>extends</em> <a href="./../../AnimatableTypes/type-aliases/UnknownAnimatable.html"><code>UnknownAnimatable</code></a></p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="anim" tabindex="-1">anim <a class="header-anchor" href="#anim" aria-label="Permalink to &quot;anim&quot;">​</a></h3><p><a href="./../../AnimatableTypes/type-aliases/Animation.html"><code>Animation</code></a>&lt;<code>Animating</code>&gt;</p><h3 id="options" tabindex="-1">options? <a class="header-anchor" href="#options" aria-label="Permalink to &quot;options?&quot;">​</a></h3><h4 id="signal" tabindex="-1">signal? <a class="header-anchor" href="#signal" aria-label="Permalink to &quot;signal?&quot;">​</a></h4><p><code>AbortSignal</code></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="./unmount.html"><code>unmount</code></a></p>',16)]))}const c=i(s,[["render",o]]);export{k as __pageData,c as default};
