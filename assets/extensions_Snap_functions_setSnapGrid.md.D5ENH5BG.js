import{_ as i,o as s,c as e,ag as t}from"./chunks/framework.4dSU8SgQ.js";const k=JSON.parse('{"title":"setSnapGrid()","description":"","frontmatter":{},"headers":[],"relativePath":"extensions/Snap/functions/setSnapGrid.md","filePath":"extensions/Snap/functions/setSnapGrid.md"}'),n={name:"extensions/Snap/functions/setSnapGrid.md"};function r(p,a,h,l,d,o){return s(),e("div",null,a[0]||(a[0]=[t('<p><a href="./../../">Documentation</a> / <a href="./../">Snap</a> / setSnapGrid</p><h1 id="setsnapgrid" tabindex="-1">setSnapGrid() <a class="header-anchor" href="#setsnapgrid" aria-label="Permalink to &quot;setSnapGrid()&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">function</span><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;"> setSnapGrid</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">Animating</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt;(</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">anim</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">gridSize</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">)</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">:</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> unsubscribe</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/zphrs/aninest/blob/310077e630d6ee37eacb9031d0d4959aae280204/extensions/src/snap.ts#L45" target="_blank" rel="noreferrer">../../extensions/src/snap.ts:45</a></p><p>Adds a grid to snap to.</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><h3 id="animating" tabindex="-1">Animating <a class="header-anchor" href="#animating" aria-label="Permalink to &quot;Animating&quot;">​</a></h3><p><code>Animating</code> <em>extends</em> <code>Animatable</code>&lt;<code>unknown</code>&gt;</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="anim" tabindex="-1">anim <a class="header-anchor" href="#anim" aria-label="Permalink to &quot;anim&quot;">​</a></h3><p><code>Animation</code>&lt;<code>Animating</code>&gt;</p><h3 id="gridsize" tabindex="-1">gridSize <a class="header-anchor" href="#gridsize" aria-label="Permalink to &quot;gridSize&quot;">​</a></h3><p><code>PartialRecursiveAnimatable</code>&lt;<code>Animating</code>&gt;</p><p>A dictionary of the size of each grid square for each variable. Ex: <code>{x: 1, y: 1}</code></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>unsubscribe</code></p><p>a function to remove the snap grid</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;">setSnapGrid</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">(</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">anim</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, {x: </span><span style="--shiki-light:#413900;--shiki-dark:#CE9409;">1</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, y: </span><span style="--shiki-light:#413900;--shiki-dark:#CE9409;">1</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">}) </span><span style="--shiki-light:#6E9D87;--shiki-dark:#6E9D87;">// will snap to integer values before ending</span></span></code></pre></div>',19)]))}const g=i(n,[["render",r]]);export{k as __pageData,g as default};
