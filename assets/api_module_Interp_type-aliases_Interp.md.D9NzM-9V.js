import{_ as a,o as t,c as i,ag as s}from"./chunks/framework.4dSU8SgQ.js";const u=JSON.parse('{"title":"Interp()","description":"","frontmatter":{},"headers":[],"relativePath":"api/module:Interp/type-aliases/Interp.md","filePath":"api/module:Interp/type-aliases/Interp.md"}'),n={name:"api/module:Interp/type-aliases/Interp.md"};function r(p,e,l,h,o,d){return t(),i("div",null,e[0]||(e[0]=[s('<p><a href="./../../">aninest-root</a> / <a href="./../">module:Interp</a> / Interp</p><h1 id="interp" tabindex="-1">Interp() <a class="header-anchor" href="#interp" aria-label="Permalink to &quot;Interp()&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">type</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> Interp</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> =</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;"> (</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">t</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">) </span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">=&gt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> number</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> |</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;"> undefined;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/zphrs/aninest/blob/a363ca71fdc4d7663cf000c3eff7b2cf0db5b46a/core/src/Animate/Interp.ts#L17" target="_blank" rel="noreferrer">Animate/Interp.ts:17</a></p><p>Interpolation function. At time 0 it should return either 0 or null (for <a href="./../functions/NO_INTERP.html">NO_INTERP</a>)</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="t" tabindex="-1">t <a class="header-anchor" href="#t" aria-label="Permalink to &quot;t&quot;">​</a></h3><p><code>number</code></p><p>Time in seconds. Guaranteed to be positive.</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>number</code> | <code>undefined</code></p><p>A value or undefined if the animation is finished.</p><h2 id="see" tabindex="-1">See <a class="header-anchor" href="#see" aria-label="Permalink to &quot;See&quot;">​</a></h2><p><a href="./../functions/NO_INTERP.html">NO_INTERP</a>, <a href="./../functions/getLinearInterp.html">getLinearInterp</a>, <a href="./../functions/getSlerp.html">getSlerp</a>, and <a href="./../functions/getCubicBezier.html">getCubicBezier</a> to create interpolation functions.</p>',14)]))}const f=a(n,[["render",r]]);export{u as __pageData,f as default};
