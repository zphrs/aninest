import{_ as e,o as a,c as t,ag as i}from"./chunks/framework.4dSU8SgQ.js";const E=JSON.parse('{"title":"ListenerSet<T>","description":"","frontmatter":{},"headers":[],"relativePath":"api/Listeners/type-aliases/ListenerSet.md","filePath":"api/Listeners/type-aliases/ListenerSet.md"}'),n={name:"api/Listeners/type-aliases/ListenerSet.md"};function r(p,s,h,l,k,d){return a(),t("div",null,s[0]||(s[0]=[i('<p><a href="./../../">aninest-root</a> / <a href="./../">Listeners</a> / ListenerSet</p><h1 id="listenerset-t" tabindex="-1">ListenerSet&lt;T&gt; <a class="header-anchor" href="#listenerset-t" aria-label="Permalink to &quot;ListenerSet\\&lt;T\\&gt;&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">type</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> ListenerSet</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">T</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt; </span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">=</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> Map</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">unknown</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, undefined&gt; </span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">&amp;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> Map</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">Listener</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">T</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt;, undefined&gt;;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/zphrs/aninest/blob/310077e630d6ee37eacb9031d0d4959aae280204/core/src/Listeners.ts#L24" target="_blank" rel="noreferrer">Listeners.ts:24</a></p><p>Uses a Map instead of a Set because a Map preserves insertion order when iterating through items.</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><h3 id="t" tabindex="-1">T <a class="header-anchor" href="#t" aria-label="Permalink to &quot;T&quot;">​</a></h3><p><code>T</code></p>',8)]))}const c=e(n,[["render",r]]);export{E as __pageData,c as default};
