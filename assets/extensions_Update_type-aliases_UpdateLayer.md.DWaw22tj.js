import{_ as e,o as t,c as s,ag as i}from"./chunks/framework.4dSU8SgQ.js";const k=JSON.parse('{"title":"UpdateLayer<Animating>","description":"","frontmatter":{},"headers":[],"relativePath":"extensions/Update/type-aliases/UpdateLayer.md","filePath":"extensions/Update/type-aliases/UpdateLayer.md"}'),n={name:"extensions/Update/type-aliases/UpdateLayer.md"};function r(l,a,h,o,p,d){return t(),s("div",null,a[0]||(a[0]=[i(`<p><a href="./../../">Documentation</a> / <a href="./../">Update</a> / UpdateLayer</p><h1 id="updatelayer-animating" tabindex="-1">UpdateLayer&lt;Animating&gt; <a class="header-anchor" href="#updatelayer-animating" aria-label="Permalink to &quot;UpdateLayer\\&lt;Animating\\&gt;&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">type</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> UpdateLayer</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">Animating</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt; </span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">=</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> Layer</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">Animating</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt; </span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">&amp;</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;"> object;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/zphrs/aninest/blob/310077e630d6ee37eacb9031d0d4959aae280204/extensions/src/update.ts#L80" target="_blank" rel="noreferrer">../../extensions/src/update.ts:80</a></p><p>An update layer that can be mounted to an animation. Allows listening to:</p><ul><li><strong>start</strong> - when any child animation starts to be updated,</li><li><strong>update</strong> - when any child animation is updated</li><li><strong>updateWithDeltaTime</strong> - each update frame with the time since the last update</li><li><strong>afterUpdate</strong> - after each update frame</li><li><strong>childStart</strong> - when a child UpdateLayer starts to be updated</li><li><strong>childEnd</strong> - when a child UpdateLayer finishes animating everything, including its children</li><li><strong>done</strong> - when the animation finishes animating everything and pauses the updates</li></ul><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><h3 id="setparent" tabindex="-1">setParent() <a class="header-anchor" href="#setparent" aria-label="Permalink to &quot;setParent()&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">setParent</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">: (</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">parentLayer</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">options</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">?</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">) </span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">=&gt;</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;"> unsubscribe</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">;</span></span></code></pre></div><p>Will mount the current update layer onto another update layer so that the other layer will drive the updates to this layer rather than those updates being driven by triggerNextUpdate. This layer will only drive its &quot;start&quot; and &quot;end&quot; events. The other layer will listen to the &quot;start&quot; event of this layer.</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="parentlayer" tabindex="-1">parentLayer <a class="header-anchor" href="#parentlayer" aria-label="Permalink to &quot;parentLayer&quot;">​</a></h5><p><code>UpdateLayer</code>&lt;<code>UnknownAnimatable</code>&gt;</p><h5 id="options" tabindex="-1">options? <a class="header-anchor" href="#options" aria-label="Permalink to &quot;options?&quot;">​</a></h5><p><a href="./../../AbortSignal/type-aliases/SignalOption.html"><code>SignalOption</code></a></p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>unsubscribe</code></p><h3 id="subscribe" tabindex="-1">subscribe() <a class="header-anchor" href="#subscribe" aria-label="Permalink to &quot;subscribe()&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;">subscribe</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">Event</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt;(</span></span>
<span class="line"><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">   type</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span></span>
<span class="line"><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">   sub</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span></span>
<span class="line"><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">   options</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">?</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">)</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">:</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;"> unsubscribe</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">;</span></span></code></pre></div><h4 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h4><h5 id="event" tabindex="-1">Event <a class="header-anchor" href="#event" aria-label="Permalink to &quot;Event&quot;">​</a></h5><p><code>Event</code> <em>extends</em> | <code>&quot;start&quot;</code> | <code>&quot;end&quot;</code> | <code>&quot;update&quot;</code> | <code>&quot;updateWithDeltaTime&quot;</code> | <code>&quot;childStart&quot;</code> | <code>&quot;childEnd&quot;</code> | <code>&quot;done&quot;</code> | <code>&quot;afterUpdate&quot;</code></p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="type" tabindex="-1">type <a class="header-anchor" href="#type" aria-label="Permalink to &quot;type&quot;">​</a></h5><p><code>Event</code></p><h5 id="sub" tabindex="-1">sub <a class="header-anchor" href="#sub" aria-label="Permalink to &quot;sub&quot;">​</a></h5><p><code>Listener</code>&lt;<code>UpdateLayerType</code>&lt;<code>Event</code>, <code>Animating</code>&gt;&gt;</p><h5 id="options-1" tabindex="-1">options? <a class="header-anchor" href="#options-1" aria-label="Permalink to &quot;options?&quot;">​</a></h5><p><a href="./../../AbortSignal/type-aliases/SignalOption.html"><code>SignalOption</code></a></p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>unsubscribe</code></p><h2 id="type-parameters-1" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters-1" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><h3 id="animating" tabindex="-1">Animating <a class="header-anchor" href="#animating" aria-label="Permalink to &quot;Animating&quot;">​</a></h3><p><code>Animating</code> <em>extends</em> <code>UnknownAnimatable</code></p>`,34)]))}const u=e(n,[["render",r]]);export{k as __pageData,u as default};
