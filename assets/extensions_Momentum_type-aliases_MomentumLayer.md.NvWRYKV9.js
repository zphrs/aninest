import{_ as e,o as s,c as i,S as t}from"./chunks/framework.BoA4oRLI.js";const c=JSON.parse('{"title":"MomentumLayer<Animating>","description":"","frontmatter":{},"headers":[],"relativePath":"extensions/Momentum/type-aliases/MomentumLayer.md","filePath":"extensions/Momentum/type-aliases/MomentumLayer.md"}'),n={name:"extensions/Momentum/type-aliases/MomentumLayer.md"};function r(l,a,h,p,o,d){return s(),i("div",null,a[0]||(a[0]=[t('<p><a href="./../../">Documentation</a> / <a href="./../">Momentum</a> / MomentumLayer</p><h1 id="momentumlayer-animating" tabindex="-1">MomentumLayer&lt;Animating&gt; <a class="header-anchor" href="#momentumlayer-animating" aria-label="Permalink to &quot;MomentumLayer\\&lt;Animating\\&gt;&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">type</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> MomentumLayer</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">Animating</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt; </span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">=</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> Layer</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">Animating</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt; </span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">&amp;</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;"> object;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/zphrs/aninest/blob/d15fc4e13610c8d581ef6e02e86e0f6d2661eb01/extensions/src/momentum.ts#L100" target="_blank" rel="noreferrer">../../extensions/src/momentum.ts:100</a></p><p>Momentum Layer</p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><h3 id="changepixelsperunit" tabindex="-1">changePixelsPerUnit() <a class="header-anchor" href="#changepixelsperunit" aria-label="Permalink to &quot;changePixelsPerUnit()&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">changePixelsPerUnit</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">: (</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">newPixelsPerUnit</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">) </span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">=&gt;</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> void</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">;</span></span></code></pre></div><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="newpixelsperunit" tabindex="-1">newPixelsPerUnit <a class="header-anchor" href="#newpixelsperunit" aria-label="Permalink to &quot;newPixelsPerUnit&quot;">​</a></h5><p><code>number</code></p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h3 id="clearrecordedstates" tabindex="-1">clearRecordedStates() <a class="header-anchor" href="#clearrecordedstates" aria-label="Permalink to &quot;clearRecordedStates()&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">clearRecordedStates</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">: () </span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">=&gt;</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> void</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">;</span></span></code></pre></div><p>useful for clearing the recorded states to prevent weird interpolation based on manually setting the state rather than setting it based on a user gesture</p><p>Should probably call right before a gesture is started; e.g. onpointerdown</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h3 id="getspeed" tabindex="-1">getSpeed() <a class="header-anchor" href="#getspeed" aria-label="Permalink to &quot;getSpeed()&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">getSpeed</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">: () </span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">=&gt;</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;"> number</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">;</span></span></code></pre></div><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>number</code></p><p>velocity in units/second</p><h3 id="mount" tabindex="-1">mount <a class="header-anchor" href="#mount" aria-label="Permalink to &quot;mount&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">mount</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">: </span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">Mount</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">&lt;</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">Animating</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">&gt;</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">;</span></span></code></pre></div><p>Mounts anim to layer, clearing previous states if they exist and unmounting any animation previously mounted to this layer.</p><h4 id="param" tabindex="-1">Param <a class="header-anchor" href="#param" aria-label="Permalink to &quot;Param&quot;">​</a></h4><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p>an unmount function</p><h3 id="startglide" tabindex="-1">startGlide() <a class="header-anchor" href="#startglide" aria-label="Permalink to &quot;startGlide()&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">startGlide</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">: () </span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">=&gt;</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;"> boolean</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">;</span></span></code></pre></div><p>Should probably call at the end of a user gesture</p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><p>whether a glide was triggered</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><h3 id="animating" tabindex="-1">Animating <a class="header-anchor" href="#animating" aria-label="Permalink to &quot;Animating&quot;">​</a></h3><p><code>Animating</code> <em>extends</em> <code>UnknownAnimatable</code></p>',39)]))}const u=e(n,[["render",r]]);export{c as __pageData,u as default};
