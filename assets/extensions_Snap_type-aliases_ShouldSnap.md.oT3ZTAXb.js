import{_ as e,o as t,c as i,ag as s}from"./chunks/framework.4dSU8SgQ.js";const k=JSON.parse('{"title":"ShouldSnap()<Animating, Point>","description":"","frontmatter":{},"headers":[],"relativePath":"extensions/Snap/type-aliases/ShouldSnap.md","filePath":"extensions/Snap/type-aliases/ShouldSnap.md"}'),n={name:"extensions/Snap/type-aliases/ShouldSnap.md"};function r(o,a,h,l,p,d){return t(),i("div",null,a[0]||(a[0]=[s('<p><a href="./../../">Documentation</a> / <a href="./../">Snap</a> / ShouldSnap</p><h1 id="shouldsnap-animating-point" tabindex="-1">ShouldSnap()&lt;Animating, Point&gt; <a class="header-anchor" href="#shouldsnap-animating-point" aria-label="Permalink to &quot;ShouldSnap()\\&lt;Animating, Point\\&gt;&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">type</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> ShouldSnap</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">Animating</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">Point</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt; </span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">=</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;"> (</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">point</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">currentState</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">) </span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">=&gt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> boolean</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/zphrs/aninest/blob/a363ca71fdc4d7663cf000c3eff7b2cf0db5b46a/extensions/src/snap.ts#L126" target="_blank" rel="noreferrer">../../extensions/src/snap.ts:126</a></p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><h3 id="animating" tabindex="-1">Animating <a class="header-anchor" href="#animating" aria-label="Permalink to &quot;Animating&quot;">​</a></h3><p><code>Animating</code> <em>extends</em> <code>Animatable</code>&lt;<code>unknown</code>&gt;</p><h3 id="point" tabindex="-1">Point <a class="header-anchor" href="#point" aria-label="Permalink to &quot;Point&quot;">​</a></h3><p><code>Point</code> <em>extends</em> <code>PartialRecursiveAnimatable</code>&lt;<code>Animating</code>&gt;</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="point-1" tabindex="-1">point <a class="header-anchor" href="#point-1" aria-label="Permalink to &quot;point&quot;">​</a></h3><p><code>Point</code></p><h3 id="currentstate" tabindex="-1">currentState <a class="header-anchor" href="#currentstate" aria-label="Permalink to &quot;currentState&quot;">​</a></h3><p><code>Animating</code></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>boolean</code></p>',16)]))}const m=e(n,[["render",r]]);export{k as __pageData,m as default};
