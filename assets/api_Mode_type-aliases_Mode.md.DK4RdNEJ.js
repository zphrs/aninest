import{_ as a,o as t,c as s,ag as i}from"./chunks/framework.4dSU8SgQ.js";const k=JSON.parse('{"title":"Mode","description":"","frontmatter":{},"headers":[],"relativePath":"api/Mode/type-aliases/Mode.md","filePath":"api/Mode/type-aliases/Mode.md"}'),o={name:"api/Mode/type-aliases/Mode.md"};function n(r,e,d,l,h,p){return t(),s("div",null,e[0]||(e[0]=[i('<p><a href="./../../">aninest-root</a> / <a href="./../">Mode</a> / Mode</p><h1 id="mode" tabindex="-1">Mode <a class="header-anchor" href="#mode" aria-label="Permalink to &quot;Mode&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">type</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> Mode</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> =</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;"> object;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/zphrs/aninest/blob/a363ca71fdc4d7663cf000c3eff7b2cf0db5b46a/core/src/Animate/Mode.ts#L12" target="_blank" rel="noreferrer">Animate/Mode.ts:12</a></p><p>Provides on, off, and toggle functions to toggle an <a href="./../../ExtensionStack/type-aliases/ExtensionStack.html">ExtensionStack</a>.`</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="toggle" tabindex="-1">toggle() <a class="header-anchor" href="#toggle" aria-label="Permalink to &quot;toggle()&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">toggle</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">: (</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">to</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">?</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">) </span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">=&gt;</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> void</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/zphrs/aninest/blob/a363ca71fdc4d7663cf000c3eff7b2cf0db5b46a/core/src/Animate/Mode.ts#L21" target="_blank" rel="noreferrer">Animate/Mode.ts:21</a></p><p>Will toggle the mode on or off depending on the value of <code>to</code>. If the mode is already set to match <code>to</code> then this function is a no-op.</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="to" tabindex="-1">to? <a class="header-anchor" href="#to" aria-label="Permalink to &quot;to?&quot;">​</a></h5><p><code>boolean</code></p><p><code>true</code> to turn the mode on, <code>false</code> to turn the mode off, and undefined to toggle.</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p>',16)]))}const g=a(o,[["render",n]]);export{k as __pageData,g as default};
