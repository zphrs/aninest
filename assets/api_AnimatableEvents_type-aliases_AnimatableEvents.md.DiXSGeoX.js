import{_ as e,o as s,c as t,ag as i}from"./chunks/framework.4dSU8SgQ.js";const k=JSON.parse('{"title":"AnimatableEvents","description":"","frontmatter":{},"headers":[],"relativePath":"api/AnimatableEvents/type-aliases/AnimatableEvents.md","filePath":"api/AnimatableEvents/type-aliases/AnimatableEvents.md"}'),n={name:"api/AnimatableEvents/type-aliases/AnimatableEvents.md"};function l(p,a,h,r,o,c){return s(),t("div",null,a[0]||(a[0]=[i(`<p><a href="./../../">aninest-root</a> / <a href="./../">AnimatableEvents</a> / AnimatableEvents</p><h1 id="animatableevents" tabindex="-1">AnimatableEvents <a class="header-anchor" href="#animatableevents" aria-label="Permalink to &quot;AnimatableEvents&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">type</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> AnimatableEvents</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> =</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;"> </span></span>
<span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">  |</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> AnimatableEventsWithValue</span></span>
<span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">  |</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> typeof</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;"> UPDATE</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/zphrs/aninest/blob/a363ca71fdc4d7663cf000c3eff7b2cf0db5b46a/core/src/Animate/AnimatableEvents.ts#L252" target="_blank" rel="noreferrer">Animate/AnimatableEvents.ts:252</a></p><p>The collection of events which can be listened to on an animation. Returns <code>undefined</code></p><h2 id="see" tabindex="-1">See <a class="header-anchor" href="#see" aria-label="Permalink to &quot;See&quot;">​</a></h2><p>AnimatableEvents/EventTypes for a list of events which return values.</p>`,7)]))}const m=e(n,[["render",l]]);export{k as __pageData,m as default};
