import{_ as a,o as t,c as s,S as i}from"./chunks/framework.BoA4oRLI.js";const k=JSON.parse('{"title":"createMode()","description":"","frontmatter":{},"headers":[],"relativePath":"api/Mode/functions/createMode.md","filePath":"api/Mode/functions/createMode.md"}'),n={name:"api/Mode/functions/createMode.md"};function r(o,e,d,l,h,c){return t(),s("div",null,e[0]||(e[0]=[i('<p><a href="./../../">aninest-root</a> / <a href="./../">Mode</a> / createMode</p><h1 id="createmode" tabindex="-1">createMode() <a class="header-anchor" href="#createmode" aria-label="Permalink to &quot;createMode()&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">function</span><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;"> createMode</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">Animating</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt;(</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">anim</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">stack</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">)</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">:</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> Mode</span></span></code></pre></div><p>Creates a mode. A mode is simply an <a href="./../../ExtensionStack/type-aliases/ExtensionStack.html">ExtensionStack</a> which can be easily toggled on and off.</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>Animating</strong> <em>extends</em> <a href="./../../AnimatableTypes/type-aliases/Animatable.html"><code>Animatable</code></a>&lt;<code>unknown</code>&gt;</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>• <strong>anim</strong>: <a href="./../../AnimatableTypes/type-aliases/Animation.html"><code>Animation</code></a>&lt;<code>Animating</code>&gt;</p><p>• <strong>stack</strong>: <a href="./../../ExtensionStack/type-aliases/ExtensionStack.html"><code>ExtensionStack</code></a>&lt;<code>Animating</code>&gt;</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="./../type-aliases/Mode.html"><code>Mode</code></a></p><p>used to toggle the <a href="./../../ExtensionStack/type-aliases/ExtensionStack.html">ExtensionStack</a>.</p><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p><a href="https://github.com/zphrs/aninest/blob/3ccad2bd2e27401982aa1c47d163019f555722e6/core/src/Animate/Mode.ts#L31" target="_blank" rel="noreferrer">Animate/Mode.ts:31</a></p>',14)]))}const m=a(n,[["render",r]]);export{k as __pageData,m as default};
