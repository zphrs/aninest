import{_ as e,o as s,c as i,ag as t}from"./chunks/framework.4dSU8SgQ.js";const k=JSON.parse('{"title":"BoundsLayer<Animating>","description":"","frontmatter":{},"headers":[],"relativePath":"extensions/Bound/type-aliases/BoundsLayer.md","filePath":"extensions/Bound/type-aliases/BoundsLayer.md"}'),n={name:"extensions/Bound/type-aliases/BoundsLayer.md"};function r(o,a,d,l,h,p){return s(),i("div",null,a[0]||(a[0]=[t('<p><a href="./../../">Documentation</a> / <a href="./../">Bound</a> / BoundsLayer</p><h1 id="boundslayer-animating" tabindex="-1">BoundsLayer&lt;Animating&gt; <a class="header-anchor" href="#boundslayer-animating" aria-label="Permalink to &quot;BoundsLayer\\&lt;Animating\\&gt;&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">type</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> BoundsLayer</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">Animating</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt; </span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">=</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;"> object </span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">&amp;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> Layer</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">Animating</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt;;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/zphrs/aninest/blob/310077e630d6ee37eacb9031d0d4959aae280204/extensions/src/bound.ts#L213" target="_blank" rel="noreferrer">../../extensions/src/bound.ts:213</a></p><p>A layer used to enforce minimum and maximum bounds on an animation.</p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><h3 id="update" tabindex="-1">update() <a class="header-anchor" href="#update" aria-label="Permalink to &quot;update()&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">update</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">: (</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">bounds</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">) </span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">=&gt;</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> void</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> |</span><span style="--shiki-light:#413900;--shiki-dark:#CE9409;"> undefined</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">;</span></span></code></pre></div><p>Updates and overrides the previously set bounds, similar to how <code>modifyTo</code> works. A bound updated with this function will apply immediately rather than waiting for the animation to end before snapping the state to be within the bound.</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="bounds" tabindex="-1">bounds <a class="header-anchor" href="#bounds" aria-label="Permalink to &quot;bounds&quot;">​</a></h5><p><code>PartialFullBounds</code>&lt;<code>PartialRecursiveAnimatable</code>&lt;<code>Animating</code>&gt;&gt;</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code> | <code>undefined</code></p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><h3 id="animating" tabindex="-1">Animating <a class="header-anchor" href="#animating" aria-label="Permalink to &quot;Animating&quot;">​</a></h3><p><code>Animating</code> <em>extends</em> <code>UnknownAnimatable</code></p><h2 id="see" tabindex="-1">See <a class="header-anchor" href="#see" aria-label="Permalink to &quot;See&quot;">​</a></h2><p><a href="./../functions/setupBoundsLayer.html">setupBoundsLayer</a> for how to create a BoundsLayer.</p>',19)]))}const u=e(n,[["render",r]]);export{k as __pageData,u as default};
