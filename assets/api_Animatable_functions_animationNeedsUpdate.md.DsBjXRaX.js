import{_ as e,o as t,c as i,ag as n}from"./chunks/framework.4dSU8SgQ.js";const c=JSON.parse('{"title":"animationNeedsUpdate()","description":"","frontmatter":{},"headers":[],"relativePath":"api/Animatable/functions/animationNeedsUpdate.md","filePath":"api/Animatable/functions/animationNeedsUpdate.md"}'),s={name:"api/Animatable/functions/animationNeedsUpdate.md"};function r(o,a,d,l,p,h){return t(),i("div",null,a[0]||(a[0]=[n('<p><a href="./../../">aninest-root</a> / <a href="./../">Animatable</a> / animationNeedsUpdate</p><h1 id="animationneedsupdate" tabindex="-1">animationNeedsUpdate() <a class="header-anchor" href="#animationneedsupdate" aria-label="Permalink to &quot;animationNeedsUpdate()&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">function</span><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;"> animationNeedsUpdate</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">Animating</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt;(</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">anim</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">)</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">:</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> boolean</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/zphrs/aninest/blob/a363ca71fdc4d7663cf000c3eff7b2cf0db5b46a/core/src/Animate/Animatable.ts#L54" target="_blank" rel="noreferrer">Animate/Animatable.ts:54</a></p><p>Returns whether the animation needs to be updated.</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><h3 id="animating" tabindex="-1">Animating <a class="header-anchor" href="#animating" aria-label="Permalink to &quot;Animating&quot;">​</a></h3><p><code>Animating</code> <em>extends</em> <a href="./../../AnimatableTypes/type-aliases/LocalAnimatable.html"><code>LocalAnimatable</code></a></p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="anim" tabindex="-1">anim <a class="header-anchor" href="#anim" aria-label="Permalink to &quot;anim&quot;">​</a></h3><p><a href="./../../AnimatableTypes/type-aliases/Animation.html"><code>Animation</code></a>&lt;<code>Animating</code>&gt;</p><p>The animation object</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>boolean</code></p><p>whether the animation needs to be updated</p>',15)]))}const k=e(s,[["render",r]]);export{c as __pageData,k as default};
