import{_ as a,o as i,c as s,ag as t}from"./chunks/framework.4dSU8SgQ.js";const u=JSON.parse('{"title":"getCubicBezier()","description":"","frontmatter":{},"headers":[],"relativePath":"api/module:Interp/functions/getCubicBezier.md","filePath":"api/module:Interp/functions/getCubicBezier.md"}'),n={name:"api/module:Interp/functions/getCubicBezier.md"};function r(l,e,p,c,h,o){return i(),s("div",null,e[0]||(e[0]=[t(`<p><a href="./../../">aninest-root</a> / <a href="./../">module:Interp</a> / getCubicBezier</p><h1 id="getcubicbezier" tabindex="-1">getCubicBezier() <a class="header-anchor" href="#getcubicbezier" aria-label="Permalink to &quot;getCubicBezier()&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">function</span><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;"> getCubicBezier</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">(</span></span>
<span class="line"><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">   duration</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span></span>
<span class="line"><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">   c1</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span></span>
<span class="line"><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">   c2</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">)</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">:</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> Interp</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/zphrs/aninest/blob/310077e630d6ee37eacb9031d0d4959aae280204/core/src/Animate/Interp.ts#L73" target="_blank" rel="noreferrer">Animate/Interp.ts:73</a></p><p>Returns a cubic bezier interpolation function.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="duration" tabindex="-1">duration <a class="header-anchor" href="#duration" aria-label="Permalink to &quot;duration&quot;">​</a></h3><p><code>number</code></p><h3 id="c1" tabindex="-1">c1 <a class="header-anchor" href="#c1" aria-label="Permalink to &quot;c1&quot;">​</a></h3><p><code>number</code></p><h3 id="c2" tabindex="-1">c2 <a class="header-anchor" href="#c2" aria-label="Permalink to &quot;c2&quot;">​</a></h3><p><code>number</code></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="./../type-aliases/Interp.html"><code>Interp</code></a></p>`,14)]))}const k=a(n,[["render",r]]);export{u as __pageData,k as default};
