import{_ as a,o as i,c as t,ag as e}from"./chunks/framework.4dSU8SgQ.js";const d=JSON.parse('{"title":"UnknownAnimation","description":"","frontmatter":{},"headers":[],"relativePath":"api/AnimatableTypes/type-aliases/UnknownAnimation.md","filePath":"api/AnimatableTypes/type-aliases/UnknownAnimation.md"}'),s={name:"api/AnimatableTypes/type-aliases/UnknownAnimation.md"};function o(p,n,l,r,k,h){return i(),t("div",null,n[0]||(n[0]=[e('<p><a href="./../../">aninest-root</a> / <a href="./../">AnimatableTypes</a> / UnknownAnimation</p><h1 id="unknownanimation" tabindex="-1">UnknownAnimation <a class="header-anchor" href="#unknownanimation" aria-label="Permalink to &quot;UnknownAnimation&quot;">â€‹</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">type</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> UnknownAnimation</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> =</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> Animation</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">UnknownAnimatable</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt;;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/zphrs/aninest/blob/310077e630d6ee37eacb9031d0d4959aae280204/core/src/Animate/AnimatableTypes.ts#L59" target="_blank" rel="noreferrer">Animate/AnimatableTypes.ts:59</a></p><p>Convenient way to write <code>Animation&lt;UnknownRecursiveAnimatable&gt;</code>. Usually used to cast an animation to this more generic type.</p>',5)]))}const c=a(s,[["render",o]]);export{d as __pageData,c as default};
