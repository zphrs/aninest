import{_ as i,o as a,c as e,S as t}from"./chunks/framework.BoA4oRLI.js";const c=JSON.parse('{"title":"modifyTo()","description":"","frontmatter":{},"headers":[],"relativePath":"api/Animatable/functions/modifyTo.md","filePath":"api/Animatable/functions/modifyTo.md"}'),n={name:"api/Animatable/functions/modifyTo.md"};function l(h,s,p,r,k,o){return a(),e("div",null,s[0]||(s[0]=[t(`<p><a href="./../../">aninest-root</a> / <a href="./../">Animatable</a> / modifyTo</p><h1 id="modifyto" tabindex="-1">modifyTo() <a class="header-anchor" href="#modifyto" aria-label="Permalink to &quot;modifyTo()&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">function</span><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;"> modifyTo</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">Animating</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt;(</span></span>
<span class="line"><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">   anim</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span></span>
<span class="line"><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">   to</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span></span>
<span class="line"><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">   suppressListeners</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">)</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">:</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> void</span></span></code></pre></div><p>Sets the final stopping point of the animation. The animation will start to interpolate to the new state the next time <a href="./updateAnimation.html">updateAnimation</a> is called.</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>Animating</strong> <em>extends</em> <a href="./../../AnimatableTypes/type-aliases/Animatable.html"><code>Animatable</code></a>&lt;<code>unknown</code>&gt;</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>• <strong>anim</strong>: <a href="./../../AnimatableTypes/type-aliases/Animation.html"><code>Animation</code></a>&lt;<code>Animating</code>&gt;</p><p>The animation object</p><p>• <strong>to</strong>: <a href="./../../AnimatableTypes/type-aliases/PartialRecursiveAnimatable.html"><code>PartialRecursiveAnimatable</code></a>&lt;<code>Animating</code>&gt;</p><p>The new partial state of the animation. A partial state means that if the complete state is <code>{ a: 0, b: 0 }</code> and you call <code>modifyTo(anim, { a: 1 })</code>, the new target state will be <code>{ a 1, b: 0 }</code>.</p><p>• <strong>suppressListeners</strong>: <code>ListenerSuppressor</code> = <code>...</code></p><p>If true, the start listeners will not be called. Useful for when you want to modify the animation within a start listener without causing an infinite loop. You can also pass an object with <code>start</code> and <code>interrupt</code> keys to selectively suppress listeners. By default <code>true</code> suppresses the start listeners while <code>false</code> suppresses nothing. This means that if you want to suppress the interrupt listeners, you must pass an object with <code>interrupt: true</code>.</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>void</code></p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;">modifyTo</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;{</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">a</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">:</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> number</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">b</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">:</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> number</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">}&gt;(</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">anim</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, { a: </span><span style="--shiki-light:#413900;--shiki-dark:#CE9409;">1</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, b: </span><span style="--shiki-light:#413900;--shiki-dark:#CE9409;">1</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;"> })</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;">modifyTo</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;{</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">a</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">:</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> Vec2</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">b</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">:</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> Vec2</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">}&gt;(</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">anim</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, {a: {x: </span><span style="--shiki-light:#413900;--shiki-dark:#CE9409;">1</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">}})</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;">modifyTo</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;{</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">a</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">:</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> Vec2</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">b</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">:</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> Vec2</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">}&gt;(</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">anim</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">.</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">children</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">.</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">a</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, {x: </span><span style="--shiki-light:#413900;--shiki-dark:#CE9409;">1</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">})</span></span></code></pre></div><h2 id="see" tabindex="-1">See <a class="header-anchor" href="#see" aria-label="Permalink to &quot;See&quot;">​</a></h2><p><a href="./../../Vec2/type-aliases/Vec2.html">Vec2</a></p><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p><a href="https://github.com/zphrs/aninest/blob/3ccad2bd2e27401982aa1c47d163019f555722e6/core/src/Animate/Animatable.ts#L212" target="_blank" rel="noreferrer">Animate/Animatable.ts:212</a></p>`,23)]))}const y=i(n,[["render",l]]);export{c as __pageData,y as default};
