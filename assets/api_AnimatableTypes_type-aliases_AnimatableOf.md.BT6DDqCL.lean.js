import{_ as i,o as s,c as t,S as e}from"./chunks/framework.BoA4oRLI.js";const A=JSON.parse('{"title":"AnimatableOf<Anim>","description":"","frontmatter":{},"headers":[],"relativePath":"api/AnimatableTypes/type-aliases/AnimatableOf.md","filePath":"api/AnimatableTypes/type-aliases/AnimatableOf.md"}'),n={name:"api/AnimatableTypes/type-aliases/AnimatableOf.md"};function l(h,a,p,k,r,d){return s(),t("div",null,a[0]||(a[0]=[e(`<p><a href="./../../">aninest-root</a> / <a href="./../">AnimatableTypes</a> / AnimatableOf</p><h1 id="animatableof-anim" tabindex="-1">AnimatableOf&lt;Anim&gt; <a class="header-anchor" href="#animatableof-anim" aria-label="Permalink to &quot;AnimatableOf\\&lt;Anim\\&gt;&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">type</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> AnimatableOf</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">Anim</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt;: Anim extends Animation&lt;</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">infer</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> T</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt; ? T : never;</span></span></code></pre></div><p>Lets you get the <a href="./Animatable.html">Animatable</a> type out of the <a href="./Animation.html">Animation</a> type.</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>Anim</strong> <em>extends</em> <a href="./UnknownAnimation.html"><code>UnknownAnimation</code></a></p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">const</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;"> particle</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> =</span><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;"> createParticle</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">();</span></span>
<span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">type</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> Particle</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> =</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> AnimatableOf</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;(</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">typeof</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;"> particle</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">)[</span><span style="--shiki-light:#846905;--shiki-dark:#FFD140;">&#39;anim&#39;</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">]&gt;;</span></span>
<span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">const</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;"> updateLayer</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> =</span><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;"> getUpdateLayer</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">Particle</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt;();</span></span>
<span class="line"><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">updateLayer</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">.</span><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;">mount</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">(</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">particle</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">.</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">anim</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">)</span></span></code></pre></div><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p><a href="https://github.com/zphrs/aninest/blob/6f2a20a565f78d1858f4407b2e35ae4791d4a036/core/src/Animate/AnimatableTypes.ts#L45" target="_blank" rel="noreferrer">Animate/AnimatableTypes.ts:45</a></p>`,10)]))}const m=i(n,[["render",l]]);export{A as __pageData,m as default};
