import{_ as a,o as s,c as t,S as i}from"./chunks/framework.BoA4oRLI.js";const k=JSON.parse('{"title":"vecToIter()","description":"","frontmatter":{},"headers":[],"relativePath":"api/Vec2/functions/vecToIter.md","filePath":"api/Vec2/functions/vecToIter.md"}'),r={name:"api/Vec2/functions/vecToIter.md"};function n(o,e,h,c,l,p){return s(),t("div",null,e[0]||(e[0]=[i('<p><a href="./../../">aninest-root</a> / <a href="./../">Vec2</a> / vecToIter</p><h1 id="vectoiter" tabindex="-1">vecToIter() <a class="header-anchor" href="#vectoiter" aria-label="Permalink to &quot;vecToIter()&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">function</span><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;"> vecToIter</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">(</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">v</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">)</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">:</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> readonly</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;"> [</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">number</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">number</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">]</span></span></code></pre></div><p>Converts a vector to an array. Useful for spreading into function arguments.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>• <strong>v</strong>: <a href="./../type-aliases/Vec2.html"><code>Vec2</code></a></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p>readonly [<code>number</code>, <code>number</code>]</p><p>An array with the x and y components of the vector in the format [x, y].</p><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p><a href="https://github.com/zphrs/aninest/blob/3ccad2bd2e27401982aa1c47d163019f555722e6/core/src/Utils/vec2.ts#L119" target="_blank" rel="noreferrer">Utils/vec2.ts:119</a></p>',11)]))}const u=a(r,[["render",n]]);export{k as __pageData,u as default};
