import{_ as e,o as a,c as n,ag as r}from"./chunks/framework.4dSU8SgQ.js";const p=JSON.parse('{"title":"API Reference","description":"","frontmatter":{},"headers":[],"relativePath":"extensions/index.md","filePath":"extensions/index.md"}'),o={name:"extensions/index.md"};function i(d,t,s,h,l,c){return a(),n("div",null,t[0]||(t[0]=[r('<h1 id="api-reference" tabindex="-1">API Reference <a class="header-anchor" href="#api-reference" aria-label="Permalink to &quot;API Reference&quot;">​</a></h1><h2 id="modules" tabindex="-1">Modules <a class="header-anchor" href="#modules" aria-label="Permalink to &quot;Modules&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Module</th><th>Description</th></tr></thead><tbody><tr><td><a href="./AbortSignal/">AbortSignal</a></td><td>Wraps any extension with an <code>addAbortSignal</code> function to allow to remove the extension from the animation with an AbortController.</td></tr><tr><td><a href="./Bound/">Bound</a></td><td>Adds bounds to an animation to ensure an animation will end within the given bounds.</td></tr><tr><td><a href="./DeduplicatedStart/"><s>DeduplicatedStart</s></a></td><td>Minimizes the number of start events triggered.</td></tr><tr><td><a href="./DynamicDuration/">DynamicDuration</a></td><td>Makes the animation speed dynamic based on the distance between the start and end points.</td></tr><tr><td><a href="./Loop/">Loop</a></td><td>Extension to loop an animation in a saw-like wave: `/</td></tr><tr><td><a href="./Momentum/">Momentum</a></td><td>Provides a momentum glide layer.</td></tr><tr><td><a href="./Proxy/">Proxy</a></td><td>Makes it easier to interact with the animation state by providing a proxy object which mirrors the state of the animation. Also allows you to set the state of the animation by setting the properties of the proxy object.</td></tr><tr><td><a href="./Reactor/">Reactor</a></td><td>Allows creating dependencies between properties of an animation so that when one property changes, another property will be updated as well, based on that one property&#39;s value.</td></tr><tr><td><a href="./Restrict/">Restrict</a></td><td>Restricts the animation to predetermined states. Similar to <code>snap</code> but it restricts the animation before it starts animating rather than after it&#39;s done animating.</td></tr><tr><td><a href="./Snap/">Snap</a></td><td>Snaps the animation to predetermined points before ending.</td></tr><tr><td><a href="./Update/">Update</a></td><td>Updates the animation every screen refresh, providing a subscribe function which allows listening to: - <strong>start</strong> - when the animation starts to be updated, - <strong>done</strong> - when the animation finishes animating everything - <strong>update</strong> - each update frame It will only update the animation when necessary, i.e. when the animation has been started and there are still things to animate.</td></tr></tbody></table>',3)]))}const f=e(o,[["render",i]]);export{p as __pageData,f as default};
