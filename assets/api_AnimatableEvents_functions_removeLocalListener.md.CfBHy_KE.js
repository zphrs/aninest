import{_ as i,o as a,c as e,S as t}from"./chunks/framework.BoA4oRLI.js";const E=JSON.parse('{"title":"removeLocalListener()","description":"","frontmatter":{},"headers":[],"relativePath":"api/AnimatableEvents/functions/removeLocalListener.md","filePath":"api/AnimatableEvents/functions/removeLocalListener.md"}'),n={name:"api/AnimatableEvents/functions/removeLocalListener.md"};function l(h,s,p,r,k,d){return a(),e("div",null,s[0]||(s[0]=[t(`<p><a href="./../../">aninest-root</a> / <a href="./../">AnimatableEvents</a> / removeLocalListener</p><h1 id="removelocallistener" tabindex="-1"><s>removeLocalListener()</s> <a class="header-anchor" href="#removelocallistener" aria-label="Permalink to &quot;~~removeLocalListener()~~&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">function</span><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;"> removeLocalListener</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">Animating</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">Event</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt;(</span></span>
<span class="line"><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">   anim</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span></span>
<span class="line"><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">   type</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span></span>
<span class="line"><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">   listener</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">)</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">:</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> void</span></span></code></pre></div><p>Removes a listener from the animation</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>Animating</strong> <em>extends</em> <a href="./../../AnimatableTypes/type-aliases/Animatable.html"><code>Animatable</code></a>&lt;<code>unknown</code>&gt;</p><p>• <strong>Event</strong> <em>extends</em> <a href="./../type-aliases/AnimatableEvents.html"><code>AnimatableEvents</code></a></p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>• <strong>anim</strong>: <a href="./../../AnimatableTypes/type-aliases/Animation.html"><code>Animation</code></a>&lt;<code>Animating</code>&gt;</p><p>The animation object</p><p>• <strong>type</strong>: <code>Event</code></p><p>See <a href="./../type-aliases/AnimatableEvents.html">AnimatableEvents</a></p><p>• <strong>listener</strong>: <code>Event</code> <em>extends</em> | <code>&quot;beforeStart&quot;</code> | <code>&quot;immutableStart&quot;</code> | <code>&quot;start&quot;</code> | <code>&quot;end&quot;</code> | <code>&quot;interrupt&quot;</code> | <code>&quot;beforeEnd&quot;</code> ? <a href="./../../Listeners/type-aliases/Listener.html"><code>Listener</code></a>&lt;<code>Partial</code>&lt;<a href="./../../AnimatableTypes/type-aliases/SlicedAnimatable.html"><code>SlicedAnimatable</code></a>&lt;<code>Animating</code>&gt;&gt;&gt; : <a href="./../../Listeners/type-aliases/Listener.html"><code>Listener</code></a>&lt;<code>undefined</code>&gt;</p><p>The listener function to remove</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>void</code></p><h2 id="see" tabindex="-1">See <a class="header-anchor" href="#see" aria-label="Permalink to &quot;See&quot;">​</a></h2><p><a href="./addLocalListener.html">addLocalListener</a> to add a listener to an animation</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#6E9D87;--shiki-dark:#6E9D87;">// setup</span></span>
<span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">const</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;"> anim</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> =</span><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;"> createAnimation</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">({ a: </span><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;">newVec2</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">(</span><span style="--shiki-light:#413900;--shiki-dark:#CE9409;">0</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span><span style="--shiki-light:#413900;--shiki-dark:#CE9409;">0</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">), b: </span><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;">newVec</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">(</span><span style="--shiki-light:#413900;--shiki-dark:#CE9409;">0</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span><span style="--shiki-light:#413900;--shiki-dark:#CE9409;">0</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">) }, </span><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;">getLinearInterp</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">(</span><span style="--shiki-light:#413900;--shiki-dark:#CE9409;">1</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">))</span></span>
<span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">const</span><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;"> listener</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> =</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;"> state</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> =&gt;</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;"> console</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">.</span><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;">log</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">(</span><span style="--shiki-light:#846905;--shiki-dark:#FFD140;">&quot;started&quot;</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">state</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">)</span></span>
<span class="line"><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;">addLocalListener</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">(</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">anim</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span><span style="--shiki-light:#846905;--shiki-dark:#FFD140;">&quot;start&quot;</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">listener</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;">modifyTo</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">(</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">anim</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, {a: {x: </span><span style="--shiki-light:#413900;--shiki-dark:#CE9409;">1</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">}}) </span><span style="--shiki-light:#6E9D87;--shiki-dark:#6E9D87;">// will trigger the listener</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;">removeLocalListener</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">(</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">anim</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span><span style="--shiki-light:#846905;--shiki-dark:#FFD140;">&quot;start&quot;</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">listener</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">)</span></span>
<span class="line"><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;">modifyTo</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">(</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">anim</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, {a: {x: </span><span style="--shiki-light:#413900;--shiki-dark:#CE9409;">0</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">}}) </span><span style="--shiki-light:#6E9D87;--shiki-dark:#6E9D87;">// will not trigger the listener</span></span></code></pre></div><h2 id="deprecated" tabindex="-1">Deprecated <a class="header-anchor" href="#deprecated" aria-label="Permalink to &quot;Deprecated&quot;">​</a></h2><p>Instead use the return value of <code>{@link addLocalListener}</code> or the AbortSignal passed into <code>{@link addLocalListener}</code> with the <code>options</code>&#39; <code>signal</code> field.</p><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p><a href="https://github.com/zphrs/aninest/blob/6f2a20a565f78d1858f4407b2e35ae4791d4a036/core/src/Animate/AnimatableEvents.ts#L143" target="_blank" rel="noreferrer">Animate/AnimatableEvents.ts:143</a></p>`,24)]))}const c=i(n,[["render",l]]);export{E as __pageData,c as default};
