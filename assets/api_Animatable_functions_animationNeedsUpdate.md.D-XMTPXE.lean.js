import{_ as e,o as t,c as i,S as n}from"./chunks/framework.BoA4oRLI.js";const c=JSON.parse('{"title":"animationNeedsUpdate()","description":"","frontmatter":{},"headers":[],"relativePath":"api/Animatable/functions/animationNeedsUpdate.md","filePath":"api/Animatable/functions/animationNeedsUpdate.md"}'),s={name:"api/Animatable/functions/animationNeedsUpdate.md"};function r(o,a,d,p,l,h){return t(),i("div",null,a[0]||(a[0]=[n('<p><a href="./../../">aninest-root</a> / <a href="./../">Animatable</a> / animationNeedsUpdate</p><h1 id="animationneedsupdate" tabindex="-1">animationNeedsUpdate() <a class="header-anchor" href="#animationneedsupdate" aria-label="Permalink to &quot;animationNeedsUpdate()&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">function</span><span style="--shiki-light:#345348;--shiki-dark:#D9FFE8;"> animationNeedsUpdate</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">Animating</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt;(</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">anim</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">)</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">:</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> boolean</span></span></code></pre></div><p>Returns whether the animation needs to be updated.</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>Animating</strong> <em>extends</em> <a href="./../../AnimatableTypes/type-aliases/LocalAnimatable.html"><code>LocalAnimatable</code></a></p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>• <strong>anim</strong>: <a href="./../../AnimatableTypes/type-aliases/Animation.html"><code>Animation</code></a>&lt;<code>Animating</code>&gt;</p><p>The animation object</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>boolean</code></p><p>whether the animation needs to be updated</p><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p><a href="https://github.com/zphrs/aninest/blob/6f2a20a565f78d1858f4407b2e35ae4791d4a036/core/src/Animate/Animatable.ts#L54" target="_blank" rel="noreferrer">Animate/Animatable.ts:54</a></p>',14)]))}const k=e(s,[["render",r]]);export{c as __pageData,k as default};
