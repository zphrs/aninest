import{_ as a,o as i,c as e,S as t}from"./chunks/framework.BoA4oRLI.js";const o=JSON.parse('{"title":"SlicedAnimatable<T>","description":"","frontmatter":{},"headers":[],"relativePath":"api/AnimatableTypes/type-aliases/SlicedAnimatable.md","filePath":"api/AnimatableTypes/type-aliases/SlicedAnimatable.md"}'),l={name:"api/AnimatableTypes/type-aliases/SlicedAnimatable.md"};function n(h,s,p,k,r,d){return i(),e("div",null,s[0]||(s[0]=[t(`<p><a href="./../../">aninest-root</a> / <a href="./../">AnimatableTypes</a> / SlicedAnimatable</p><h1 id="slicedanimatable-t" tabindex="-1">SlicedAnimatable&lt;T&gt; <a class="header-anchor" href="#slicedanimatable-t" aria-label="Permalink to &quot;SlicedAnimatable\\&lt;T\\&gt;&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">type</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> SlicedAnimatable</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">T</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt; </span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">=</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> LocalAnimatable</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> &amp;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> Local</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&lt;</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">UnknownRoot</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">T</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">&gt;;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/zphrs/aninest/blob/d15fc4e13610c8d581ef6e02e86e0f6d2661eb01/core/src/Animate/AnimatableTypes.ts#L88" target="_blank" rel="noreferrer">Animate/AnimatableTypes.ts:88</a></p><p>A local slice of the Animatable type.</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><h3 id="t" tabindex="-1">T <a class="header-anchor" href="#t" aria-label="Permalink to &quot;T&quot;">​</a></h3><p><code>T</code> <em>extends</em> <a href="./UnknownAnimatable.html"><code>UnknownAnimatable</code></a></p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">const</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;"> startingState</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> =</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;"> {a: {x: </span><span style="--shiki-light:#413900;--shiki-dark:#CE9409;">0</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, y: </span><span style="--shiki-light:#413900;--shiki-dark:#CE9409;">0</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">}, b: </span><span style="--shiki-light:#413900;--shiki-dark:#CE9409;">0</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">}</span></span>
<span class="line"><span style="--shiki-light:#6E9D87;--shiki-dark:#6E9D87;">// the following are the local slices of the type of the startingState:</span></span>
<span class="line"><span style="--shiki-light:#6E9D87;--shiki-dark:#6E9D87;">// looking at the root level</span></span>
<span class="line"><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">{</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">b</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">: </span><span style="--shiki-light:#413900;--shiki-dark:#CE9409;">0</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">}</span></span>
<span class="line"><span style="--shiki-light:#6E9D87;--shiki-dark:#6E9D87;">// looking at the &#39;a&#39; child</span></span>
<span class="line"><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">{ </span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">x</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">: </span><span style="--shiki-light:#413900;--shiki-dark:#CE9409;">0</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">, </span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">y</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">: </span><span style="--shiki-light:#413900;--shiki-dark:#CE9409;">0</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;"> }</span></span></code></pre></div>`,10)]))}const c=a(l,[["render",n]]);export{o as __pageData,c as default};
