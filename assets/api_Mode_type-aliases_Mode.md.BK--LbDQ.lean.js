import{_ as e,o as s,c as t,S as i}from"./chunks/framework.BoA4oRLI.js";const k=JSON.parse('{"title":"Mode","description":"","frontmatter":{},"headers":[],"relativePath":"api/Mode/type-aliases/Mode.md","filePath":"api/Mode/type-aliases/Mode.md"}'),o={name:"api/Mode/type-aliases/Mode.md"};function n(l,a,d,r,h,p){return s(),t("div",null,a[0]||(a[0]=[i('<p><a href="./../../">aninest-root</a> / <a href="./../">Mode</a> / Mode</p><h1 id="mode" tabindex="-1">Mode <a class="header-anchor" href="#mode" aria-label="Permalink to &quot;Mode&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">type</span><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;"> Mode</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">: object;</span></span></code></pre></div><p>Provides on, off, and toggle functions to toggle an <a href="./../../ExtensionStack/type-aliases/ExtensionStack.html">ExtensionStack</a>.`</p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><h3 id="off" tabindex="-1">off() <a class="header-anchor" href="#off" aria-label="Permalink to &quot;off()&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">off</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">: () </span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">=&gt;</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> void</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">;</span></span></code></pre></div><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h3 id="on" tabindex="-1">on() <a class="header-anchor" href="#on" aria-label="Permalink to &quot;on()&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">on</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">: () </span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">=&gt;</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> void</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">;</span></span></code></pre></div><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h3 id="toggle" tabindex="-1">toggle() <a class="header-anchor" href="#toggle" aria-label="Permalink to &quot;toggle()&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes classy-light classy-dark vp-code"><code><span class="line"><span style="--shiki-light:#645CEE;--shiki-dark:#A8A9F4;">toggle</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">: (</span><span style="--shiki-light:#2D27A4;--shiki-dark:#CFD3FF;">to</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">?</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">) </span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;">=&gt;</span><span style="--shiki-light:#CE9409;--shiki-dark:#FFF4BA;"> void</span><span style="--shiki-light:#313233;--shiki-dark:#E9EAE4;">;</span></span></code></pre></div><p>Will toggle the mode on or off depending on the value of <code>to</code>. If the mode is already set to match <code>to</code> then this function is a no-op.</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• <strong>to?</strong>: <code>boolean</code></p><p><code>true</code> to turn the mode on, <code>false</code> to turn the mode off, and undefined to toggle.</p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p><a href="https://github.com/zphrs/aninest/blob/6f2a20a565f78d1858f4407b2e35ae4791d4a036/core/src/Animate/Mode.ts#L12" target="_blank" rel="noreferrer">Animate/Mode.ts:12</a></p>',23)]))}const g=e(o,[["render",n]]);export{k as __pageData,g as default};
